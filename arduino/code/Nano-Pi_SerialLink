// Code from: /Examples/Communication/SerialEvent
// Code listes to incoming serial commands then returns all data received

String inputString = "";         // a string to hold incoming data
boolean stringComplete = false;  // whether the string is complete

void setup() {
  Serial.begin(115200);
  inputString.reserve(200);  // reserve 200 bytes for the inputString:
  delay(500);
  Serial.println("Serial Setup. Starting loop.....");
}

void loop() {
  if (stringComplete) {
    if (inputString.substring(0, 7)=="request") {
      String request_string = inputString.substring(8);
      Serial.println("");
      Serial.print("Request detected: ");
      Serial.println(request_string);
      Serial.println("");
    }
    else {
      Serial.println("");
      Serial.print("Non-Request: ");
      Serial.println(inputString);
      Serial.println("");
    }
    inputString = "";
    stringComplete = false;
  }
}

void serialEvent() {
  while (Serial.available()) {
    char inChar = (char)Serial.read();    // get the new byte:
    inputString += inChar;        // add it to the inputString
    if (inChar == '\n') {         // if the incoming character is a newline, set a flag so the main loop can do something about it:
      stringComplete = true;
    }
  }
}
